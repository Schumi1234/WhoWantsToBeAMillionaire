@using System.Globalization
@model WebMain.Models.Game.GameRoundViewModel
@{
    ViewData["Title"] = "Spielrunde";
}

@using (Html.BeginForm("ShowResults", "Game", FormMethod.Post, new { @class = "form-horizontal", role = "form", viewModel = Model }))
{
    <br />
    @Html.Label($"Punktzahl: {Model.Score}")
    <br />
    <h3>@Model.QuestionForTheRound.Question</h3>
    <br />
    <fieldset>
        @for (var i = 0; i < Model.QuestionForTheRound.Answers.Count; i++)
        {
            if (Model.QuestionForTheRound.Answers[i].DisableAnswer)
            {
                <div>
                    @Html.RadioButtonFor(m => m.IndexOfSelectedAnswer, i, new { disabled = "disabled" })
                    @Html.Label(Model.QuestionForTheRound.Answers[i].Answer)
                </div>
            }
            else
            {
                <div>
                    @Html.RadioButtonFor(m => m.IndexOfSelectedAnswer, i)
                    @Html.Label(Model.QuestionForTheRound.Answers[i].Answer)
                </div>
            }
        }
    </fieldset>
    if (Model.JokerUsed)
    {
        <text>Joker verbraucht</text>
    }
    else
    {
        <input type="submit" class="btn btn-default" value="50:50 Joker" name="Joker" />
    }
    <input type="submit" class="btn btn-default" value="Auswahl bestätigen" />


    <!--Save values in models, otherwise data will be lost-->
    @Html.HiddenFor(m => m.Score)
    @Html.HiddenFor(m => m.IndexOfSelectedAnswer);
    @Html.HiddenFor(m => m.GameBegin);
    @Html.HiddenFor(m => m.JokerUsed);
    @Html.HiddenFor(m => m.QuestionForTheRound.QuestionId)
    @Html.HiddenFor(m => m.QuestionForTheRound.PercentageOfCorrectlyAnswered)
    @Html.HiddenFor(m => m.QuestionForTheRound.Question)
    for (var i = 0; i < Model.Categories.Count(); i++)
    {
        @Html.HiddenFor(m => m.Categories[i].CategoryId)
    }

    if (Model.QuestionsToPlay.Count == 0)
    {
        @Html.HiddenFor(m => m.QuestionsToPlay)
    }

    for (var i = 0; i < Model.QuestionsToPlay.Count(); i++)
    {
        @Html.HiddenFor(m => m.QuestionsToPlay[i].QuestionId)
        @Html.HiddenFor(m => m.QuestionsToPlay[i].Question)
        @Html.HiddenFor(m => m.QuestionsToPlay[i].PercentageOfCorrectlyAnswered)
        for (var x = 0; x < Model.QuestionsToPlay[i].Answers.Count(); x++)
        {
            @Html.HiddenFor(m => m.QuestionsToPlay[i].Answers[x].AnswerId)
            @Html.HiddenFor(m => m.QuestionsToPlay[i].Answers[x].Answer)
            @Html.HiddenFor(m => m.QuestionsToPlay[i].Answers[x].Correct)
            @Html.HiddenFor(m => m.QuestionsToPlay[i].Answers[x].QuestionId)
        }
    }
    for (var i = 0; i < Model.QuestionForTheRound.Answers.Count(); i++)
    {
        @Html.HiddenFor(m => m.QuestionForTheRound.Answers[i].QuestionId)
        @Html.HiddenFor(m => m.QuestionForTheRound.Answers[i].Correct)
        @Html.HiddenFor(m => m.QuestionForTheRound.Answers[i].Answer)
        @Html.HiddenFor(m => m.QuestionForTheRound.Answers[i].AnswerId)
    }
}